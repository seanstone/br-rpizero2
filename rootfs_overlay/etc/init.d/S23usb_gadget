#!/bin/sh

# derived from code from:
# https://pastebin.com/VtAusEmf (author unknown)
# and 
# David Lechner <david@lechnology.com>  https://github.com/ev3dev/ev3-systemd/blob/ev3dev-buster/scripts/ev3-usb.sh

# Copyright (C) 2015,2017 David Lechner <david@lechnology.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

# 2020 changes by rundekugel @github:
# - more easy to use with default params
# - changes to use with other embedded systems

vid="0x1d6b" # set your vendor id : Linux Foundation
pid="0x0104" # set your product id : Multifunction Composite Gadget
devversion="0x0100" # this should be incremented any time there are breaking changes
                # to this script so that the host OS sees it as a new device and
                # re-enumerates everything rather than relying on cached values : v1.0.0
mfg="Linux Foundation" # adjust
prod="Multifunction Composite Gadget" # adjust
serial="t00000002" # adjust

g="/sys/kernel/config/usb_gadget/usbnet"

modprobe dwc2
modprobe libcomposite
mount -t configfs none /sys/kernel/config
set -e
usb_ver="0x0200" # USB 2.0
dev_class="2" # Communications 
attr="0xC0" # Self powered
pwr="0xfe" # 
cfg1="CDC"
cfg2="RNDIS"
ms_vendor_code="0xcd" # Microsoft
ms_qw_sign="MSFT100" # also Microsoft (if you couldn't tell)
ms_compat_id="RNDIS" # matches Windows RNDIS Drivers
ms_subcompat_id="5162001" # matches Windows RNDIS 6.0 Driver

# Create a new gadget

mkdir ${g}
echo "${usb_ver}" > ${g}/bcdUSB
echo "${dev_class}" > ${g}/bDeviceClass
echo "${vid}" > ${g}/idVendor
echo "${pid}" > ${g}/idProduct
echo "${devversion}" > ${g}/bcdDevice
mkdir ${g}/strings/0x409
echo "${mfg}" > ${g}/strings/0x409/manufacturer
echo "${prod}" > ${g}/strings/0x409/product
echo "${serial}" > ${g}/strings/0x409/serialnumber

# Create 2 configurations. The first will be CDC. The second will be RNDIS.
# Thanks to os_desc, Windows should use the second configuration.

# config 1 is for CDC

mkdir ${g}/configs/c.1
echo "${attr}" > ${g}/configs/c.1/bmAttributes
echo "${pwr}" > ${g}/configs/c.1/MaxPower
mkdir ${g}/configs/c.1/strings/0x409
echo "${cfg1}" > ${g}/configs/c.1/strings/0x409/configuration

# Create the CDC function

mkdir ${g}/functions/ecm.usb0

# config 2 is for RNDIS

mkdir ${g}/configs/c.2
echo "${attr}" > ${g}/configs/c.2/bmAttributes
echo "${pwr}" > ${g}/configs/c.2/MaxPower
mkdir ${g}/configs/c.2/strings/0x409
echo "${cfg2}" > ${g}/configs/c.2/strings/0x409/configuration

# On Windows 7 and later, the RNDIS 5.1 driver would be used by default,
# but it does not work very well. The RNDIS 6.0 driver works better. In
# order to get this driver to load automatically, we have to use a
# Microsoft-specific extension of USB.

echo "1" > ${g}/os_desc/use
echo "${ms_vendor_code}" > ${g}/os_desc/b_vendor_code
echo "${ms_qw_sign}" > ${g}/os_desc/qw_sign

# Create the RNDIS function, including the Microsoft-specific bits

mkdir ${g}/functions/rndis.usb0
echo "${ms_compat_id}" > ${g}/functions/rndis.usb0/os_desc/interface.rndis/compatible_id
echo "${ms_subcompat_id}" > ${g}/functions/rndis.usb0/os_desc/interface.rndis/sub_compatible_id


# Link everything up and bind the USB device
ln -s ${g}/functions/ecm.usb0 ${g}/configs/c.1
ln -s ${g}/functions/rndis.usb0 ${g}/configs/c.2
ln -s ${g}/configs/c.2 ${g}/os_desc

udc_device="$(ls /sys/class/udc/)"
echo "udc: $udc_device";
echo "${udc_device}" > ${g}/UDC